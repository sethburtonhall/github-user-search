---
import Pagination from "@/components/Pagination";

import daft1 from "@/public/daftpunktocat-thomas.gif";
import daft2 from "@/public/daftpunktocat-guy.gif";

export const partial = true;

const query = Astro.url.searchParams.get("query") || "";
const page = parseInt(Astro.url.searchParams.get("page") || "1", 10);

interface GithubUser {
  id: number;
  login: string;
  avatar_url: string;
  html_url: string;
  bio?: string;
}

let users: GithubUser[] = [];
let totalCount = 0;

try {
  const response = await fetch(
    `https://api.github.com/search/users?q=${query}&per_page=8&page=${page}`,
  );

  if (!response.ok) throw new Error(response.statusText);

  const data = await response.json();
  users = data.items || [];
  totalCount = data.total_count || 0;

  for (const user of users) {
    try {
      const bioResponse = await fetch(`https://api.github.com/users/${user.login}`);
      if (!bioResponse.ok) throw new Error(bioResponse.statusText);
      const bioData = await bioResponse.json();
      user.bio = bioData.bio || "";
    } catch (bioError) {
      console.error(`Error fetching bio for user ${user.login}:`, bioError);
      user.bio = "Bio not available";
    }
  }

} catch (error) {
  console.error("Error fetching users:", error);
}

const totalPages = Math.ceil(totalCount / 8);

console.log(users)
---

{
  users.length === 0 && query !== "" && (
      <h3 class="text-center text-lg font-semibold">No users found, please try again.</h3>
      <img
        src={daft2.src}
        alt="No users found"
        class="mx-auto aspect-square w-96 rounded-full mt-24"
      />
  )
}

{
  query === ""  && (
      <h3 class="text-center text-lg font-semibold">
            Type a username in the search box above.
          </h3>
          <img
            src={daft1.src}
            alt="Search for users"
            class="mx-auto mt-24 aspect-square w-96 rounded-full"
          />
  )
}

<ul class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
  {
    users.length > 0 &&
      users.map((user: GithubUser) => (
        <li class="rounded bg-white p-4 shadow flex flex-col gap-12 items-center">
          <div class="flex flex-col items-center text-center gap-2">
            <img
              src={user.avatar_url}
              alt={user.login}
              class="mb-2 size-24 rounded-full"
            />
            <p class="font-semibold text-lg">{user.login}</p>
            <p class="text-sm">{user.bio}</p>
          </div>
          <div class="flex flex-col items-center mt-auto">
            <a href={user.html_url}>Visit Profile</a>
          </div>
        </li>
      ))
  }
</ul>

{
  users.length > 0 && (
    <div class="mt-12">
      <Pagination query={query} page={page} totalPages={totalPages} />
    </div>
  )
}
